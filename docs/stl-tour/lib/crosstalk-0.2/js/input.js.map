{"version":3,"sources":["../../../javascript/src/input.js"],"names":[],"mappings":";;;;;QAIgB,Q,GAAA,Q;AAJhB,IAAI,IAAI,OAAO,MAAf;;AAEA,IAAI,WAAW,EAAf;;AAEO,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AAC5B,WAAS,IAAI,SAAb,IAA0B,GAA1B;AACA,MAAI,OAAO,QAAP,IAAmB,OAAO,QAAP,CAAgB,UAAhB,KAA+B,UAAtD,EAAkE;AAChE,MAAE,YAAM;AACN;AACD,KAFD;AAGD,GAJD,MAIO;AACL,eAAW,IAAX,EAAiB,GAAjB;AACD;AACF;;AAED,SAAS,IAAT,GAAgB;AACd,SAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,UAAS,SAAT,EAAoB;AAChD,QAAI,UAAU,SAAS,SAAT,CAAd;AACA,MAAE,MAAM,QAAQ,SAAhB,EAA2B,GAA3B,CAA+B,wBAA/B,EAAyD,IAAzD,CAA8D,UAAS,CAAT,EAAY,EAAZ,EAAgB;AAC5E,mBAAa,OAAb,EAAsB,EAAtB;AACD,KAFD;AAGD,GALD;AAMD;;AAED;AACA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB,SAAO,IAAI,OAAJ,CAAY,yCAAZ,EAAuD,MAAvD,CAAP;AACD;;AAED,SAAS,YAAT,CAAsB,OAAtB,EAA+B,EAA/B,EAAmC;AACjC,MAAI,SAAS,EAAE,EAAF,EAAM,IAAN,CAAW,+CAA+C,QAAQ,GAAG,EAAX,CAA/C,GAAgE,IAA3E,CAAb;AACA,MAAI,OAAO,KAAK,KAAL,CAAW,OAAO,CAAP,EAAU,SAArB,CAAX;;AAEA,MAAI,WAAW,QAAQ,OAAR,CAAgB,EAAhB,EAAoB,IAApB,CAAf;AACA,IAAE,EAAF,EAAM,IAAN,CAAW,oBAAX,EAAiC,QAAjC;AACA,IAAE,EAAF,EAAM,QAAN,CAAe,uBAAf;AACD;;AAED,IAAI,OAAO,KAAX,EAAkB;AAAA;AAChB,QAAI,eAAe,IAAI,OAAO,KAAP,CAAa,YAAjB,EAAnB;AACA,QAAI,IAAI,OAAO,MAAf;AACA,MAAE,MAAF,CAAS,YAAT,EAAuB;AACrB,YAAM,cAAS,KAAT,EAAgB;AACpB,eAAO,EAAE,KAAF,EAAS,IAAT,CAAc,kBAAd,CAAP;AACD,OAHoB;AAIrB,aAAO,eAAS,EAAT,EAAa;AAClB,eAAO,GAAG,EAAV;AACD,OANoB;AAOrB,gBAAU,kBAAS,EAAT,EAAa,CAEtB,CAToB;AAUrB,gBAAU,kBAAS,EAAT,EAAa,KAAb,EAAoB,CAE7B,CAZoB;AAarB,sBAAgB,wBAAS,EAAT,EAAa,IAAb,EAAmB,CAElC,CAfoB;AAgBrB,iBAAW,mBAAS,EAAT,EAAa,QAAb,EAAuB;AAChC,UAAE,EAAF,EAAM,EAAN,CAAS,kCAAT,EAA6C,UAAS,KAAT,EAAgB;AAC3D,mBAAS,KAAT;AACD,SAFD;AAGD,OApBoB;AAqBrB,mBAAa,qBAAS,EAAT,EAAa;AACxB,UAAE,EAAF,EAAM,GAAN,CAAU,YAAV;AACD;AAvBoB,KAAvB;AAyBA,WAAO,KAAP,CAAa,aAAb,CAA2B,QAA3B,CAAoC,YAApC,EAAkD,wBAAlD;AA5BgB;AA6BjB","file":"input.js","sourcesContent":["let $ = global.jQuery;\n\nlet bindings = {};\n\nexport function register(reg) {\n  bindings[reg.className] = reg;\n  if (global.document && global.document.readyState !== \"complete\") {\n    $(() => {\n      bind();\n    });\n  } else {\n    setTimeout(bind, 100);\n  }\n}\n\nfunction bind() {\n  Object.keys(bindings).forEach(function(className) {\n    let binding = bindings[className];\n    $(\".\" + binding.className).not(\".crosstalk-input-bound\").each(function(i, el) {\n      bindInstance(binding, el);\n    });\n  });\n}\n\n// Escape jQuery identifier\nfunction $escape(val) {\n  return val.replace(/([!\"#$%&'()*+,.\\/:;<=>?@\\[\\\\\\]^`{|}~])/g, \"\\\\$1\");\n}\n\nfunction bindInstance(binding, el) {\n  let jsonEl = $(el).find(\"script[type='application/json'][data-for='\" + $escape(el.id) + \"']\");\n  let data = JSON.parse(jsonEl[0].innerText);\n\n  let instance = binding.factory(el, data);\n  $(el).data(\"crosstalk-instance\", instance);\n  $(el).addClass(\"crosstalk-input-bound\");\n}\n\nif (global.Shiny) {\n  let inputBinding = new global.Shiny.InputBinding();\n  let $ = global.jQuery;\n  $.extend(inputBinding, {\n    find: function(scope) {\n      return $(scope).find(\".crosstalk-input\");\n    },\n    getId: function(el) {\n      return el.id;\n    },\n    getValue: function(el) {\n\n    },\n    setValue: function(el, value) {\n\n    },\n    receiveMessage: function(el, data) {\n\n    },\n    subscribe: function(el, callback) {\n      $(el).on(\"crosstalk-value-change.crosstalk\", function(event) {\n        callback(false);\n      });\n    },\n    unsubscribe: function(el) {\n      $(el).off(\".crosstalk\");\n    }\n  });\n  global.Shiny.inputBindings.register(inputBinding, \"crosstalk.inputBinding\");\n}\n"]}