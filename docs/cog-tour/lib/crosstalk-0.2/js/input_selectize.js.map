{"version":3,"sources":["../../../javascript/src/input_selectize.js"],"names":[],"mappings":";;AAAA;;IAAY,K;;AACZ;;IAAY,I;;;;AAEZ,IAAI,IAAI,OAAO,MAAf;;AAEA,MAAM,QAAN,CAAe;AACb,aAAW,wBADE;;AAGb,WAAS,iBAAS,EAAT,EAAa,IAAb,EAAmB;AAC1B;;;;;;AAMA,QAAI,QAAQ,CAAC,EAAC,OAAO,EAAR,EAAY,OAAO,OAAnB,EAAD,CAAZ;AACA,QAAI,QAAQ,KAAK,aAAL,CAAmB,KAAK,KAAxB,CAAZ;AACA,QAAI,OAAO;AACT,eAAS,MAAM,MAAN,CAAa,KAAb,CADA;AAET,kBAAY,OAFH;AAGT,kBAAY;AAHH,KAAX;;AAMA,QAAI,SAAS,EAAE,EAAF,EAAM,IAAN,CAAW,QAAX,EAAqB,CAArB,CAAb;;AAEA,QAAI,YAAY,EAAE,MAAF,EAAU,SAAV,CAAoB,IAApB,EAA0B,CAA1B,EAA6B,SAA7C;;AAEA,QAAI,UAAU,OAAO,SAAP,CAAiB,KAAjB,CAAuB,KAAK,KAA5B,CAAd;AACA,QAAI,WAAW,OAAO,SAAP,CAAiB,MAAjB,CAAwB,YAAxB,CAAqC,OAArC,CAAf;;AAEA,cAAU,EAAV,CAAa,QAAb,EAAuB,YAAW;AAChC,UAAI,UAAU,KAAV,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,iBAAS,KAAT;AACD,OAFD,MAEO;AAAA;AACL,cAAI,OAAO,EAAX;AACA,oBAAU,KAAV,CAAgB,OAAhB,CAAwB,UAAS,KAAT,EAAgB;AACtC,iBAAK,GAAL,CAAS,KAAT,EAAgB,OAAhB,CAAwB,UAAS,GAAT,EAAc;AACpC,mBAAK,GAAL,IAAY,IAAZ;AACD,aAFD;AAGD,WAJD;AAKA,cAAI,WAAW,OAAO,IAAP,CAAY,IAAZ,CAAf;AACA,mBAAS,IAAT;AACA,mBAAS,GAAT,CAAa,QAAb;AATK;AAUN;AACF,KAdD;;AAgBA,WAAO,SAAP;AACD;AA1CY,CAAf","file":"input_selectize.js","sourcesContent":["import * as input from \"./input\";\nimport * as util from \"./util\";\n\nlet $ = global.jQuery;\n\ninput.register({\n  className: \"crosstalk-input-select\",\n\n  factory: function(el, data) {\n    /*\n     * items: {value: [...], label: [...]}\n     * map: {\"groupA\": [\"keyA\", \"keyB\", ...], ...}\n     * group: \"ct-groupname\"\n     */\n\n    let first = [{value: \"\", label: \"(All)\"}];\n    let items = util.dataframeToD3(data.items);\n    let opts = {\n      options: first.concat(items),\n      valueField: \"value\",\n      labelField: \"label\"\n    };\n\n    let select = $(el).find(\"select\")[0];\n\n    let selectize = $(select).selectize(opts)[0].selectize;\n\n    let ctGroup = global.crosstalk.group(data.group);\n    let ctHandle = global.crosstalk.filter.createHandle(ctGroup);\n\n    selectize.on(\"change\", function() {\n      if (selectize.items.length === 0) {\n        ctHandle.clear();\n      } else {\n        let keys = {};\n        selectize.items.forEach(function(group) {\n          data.map[group].forEach(function(key) {\n            keys[key] = true;\n          });\n        });\n        let keyArray = Object.keys(keys);\n        keyArray.sort();\n        ctHandle.set(keyArray);\n      }\n    });\n\n    return selectize;\n  }\n});\n"]}