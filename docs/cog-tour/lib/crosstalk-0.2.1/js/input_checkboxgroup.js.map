{"version":3,"sources":["../../../javascript/src/input_checkboxgroup.js"],"names":[],"mappings":";;AAAA;;IAAY,K;;;;AAEZ,IAAI,IAAI,OAAO,MAAf;;AAEA,MAAM,QAAN,CAAe;AACb,aAAW,+BADE;;AAGb,WAAS,iBAAS,EAAT,EAAa,IAAb,EAAmB;AAC1B;;;;AAIA,QAAI,UAAU,OAAO,SAAP,CAAiB,KAAjB,CAAuB,KAAK,KAA5B,CAAd;AACA,QAAI,WAAW,OAAO,SAAP,CAAiB,MAAjB,CAAwB,YAAxB,CAAqC,OAArC,CAAf;;AAEA,QAAI,MAAM,EAAE,EAAF,CAAV;AACA,QAAI,EAAJ,CAAO,QAAP,EAAiB,wBAAjB,EAA2C,YAAW;AACpD,UAAI,UAAU,IAAI,IAAJ,CAAS,gCAAT,CAAd;AACA,UAAI,QAAQ,MAAR,KAAmB,CAAvB,EAA0B;AACxB,iBAAS,KAAT;AACD,OAFD,MAEO;AAAA;AACL,cAAI,OAAO,EAAX;AACA,kBAAQ,IAAR,CAAa,YAAW;AACtB,iBAAK,GAAL,CAAS,KAAK,KAAd,EAAqB,OAArB,CAA6B,UAAS,GAAT,EAAc;AACzC,mBAAK,GAAL,IAAY,IAAZ;AACD,aAFD;AAGD,WAJD;AAKA,cAAI,WAAW,OAAO,IAAP,CAAY,IAAZ,CAAf;AACA,mBAAS,IAAT;AACA,mBAAS,GAAT,CAAa,QAAb;AATK;AAUN;AACF,KAfD;AAgBD;AA5BY,CAAf","file":"input_checkboxgroup.js","sourcesContent":["import * as input from \"./input\";\n\nlet $ = global.jQuery;\n\ninput.register({\n  className: \"crosstalk-input-checkboxgroup\",\n\n  factory: function(el, data) {\n    /*\n     * map: {\"groupA\": [\"keyA\", \"keyB\", ...], ...}\n     * group: \"ct-groupname\"\n     */\n    let ctGroup = global.crosstalk.group(data.group);\n    let ctHandle = global.crosstalk.filter.createHandle(ctGroup);\n\n    let $el = $(el);\n    $el.on(\"change\", \"input[type='checkbox']\", function() {\n      let checked = $el.find(\"input[type='checkbox']:checked\");\n      if (checked.length === 0) {\n        ctHandle.clear();\n      } else {\n        let keys = {};\n        checked.each(function() {\n          data.map[this.value].forEach(function(key) {\n            keys[key] = true;\n          });\n        });\n        let keyArray = Object.keys(keys);\n        keyArray.sort();\n        ctHandle.set(keyArray);\n      }\n    });\n  }\n});\n"]}