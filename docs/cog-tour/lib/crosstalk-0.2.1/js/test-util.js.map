{"version":3,"sources":["../../../javascript/tests/test-util.js"],"names":[],"mappings":"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","file":"test-util.js","sourcesContent":["import assert from \"assert\";\nimport { diffSortedLists } from \"./util\";\n\ndescribe(\"diffSortedLists\", () => {\n  it(\"detects basic differences\", function() {\n    let a = [\"a\", \"b\", \"c\"];\n    let b = [\"b\", \"d\"];\n\n    let diff = diffSortedLists(a, b);\n    assert.deepEqual(diff, {\n      added: [\"d\"],\n      removed: [\"a\", \"c\"]\n    });\n  });\n\n  it(\"is case sensitive\", () => {\n    let a = [\"Aa\", \"aa\", \"Bb\"];\n    a.sort();\n    let b = [\"aa\", \"bb\"];\n\n    let diff = diffSortedLists(a, b);\n    assert.deepEqual(diff, {\n      added: [\"bb\"],\n      removed: [\"Aa\", \"Bb\"]\n    });\n  });\n\n  it(\"works with numbers\", () => {\n    let diff = diffSortedLists([1, 2, 3, 11], [1, 3, 4]);\n    assert.deepEqual(diff, {\n      added: [4],\n      removed: [2, 11]\n    });\n  });\n\n  it(\"handles empty lists\", () => {\n    let diff = diffSortedLists([], [1,2,3]);\n    assert.deepEqual(diff, {added: [1,2,3], removed: []});\n\n    let diff2 = diffSortedLists([1,2,3], []);\n    assert.deepEqual(diff2, {added: [], removed: [1,2,3]});\n\n    let diff3 = diffSortedLists([1,2,3], [1,2,3]);\n    assert.deepEqual(diff3, {added: [], removed: []});\n\n    let diff4 = diffSortedLists([], []);\n    assert.deepEqual(diff4, {added: [], removed: []});\n  });\n\n  it(\"checks that arguments are sorted, deduped\", function() {\n    assert.throws(() => {\n      diffSortedLists([\"a\", \"a\", \"b\"], []);\n    });\n    assert.throws(() => {\n      diffSortedLists([\"b\", \"a\"], []);\n    });\n    assert.throws(() => {\n      diffSortedLists([\"a\", \"a\"], [1, 2]);\n    });\n    assert.throws(() => {\n      diffSortedLists([1, 2], [\"a\", \"a\"]);\n    });\n  });\n});\n"]}